### BRUTE FORCE
class Solution {
    public int characterReplacement(String s, int k) {
        int length = s.length();
        int max  = 0;
        for(int i = 0 ; i < length; i++){
            int[] freq = new int[26];
            int maxFreq = 0;
            for(int j = i; j < length; j++){
                char ch = s.charAt(j);
                freq[ch-'A']++;
                maxFreq = Math.max(maxFreq,freq[ch-'A']);
                int changes = (j-i+1) - maxFreq;
                if(changes <= k){
                    max = Math.max(max,j-i+1);
                }
                else{
                    break;
                }
            }
        }
        return max;
    }
}

###### OPTIMIZED

class Solution {
    public int characterReplacement(String s, int k) {
        int length = s.length();
        int max  = 0;
        int left = 0;
        int right = 0;
        int freq[] = new int[26];
        int maxFreq = 0;
        while(left < length && right < length){
            char ch = s.charAt(right);
            freq[ch - 'A']++;
            maxFreq = Math.max(maxFreq,freq[ch-'A']);
            if ((right-left+1) - maxFreq > k){
                freq[s.charAt(left)-'A']--;
                left++;
            } 
            if((right-left+1) - maxFreq <= k){
                max = Math.max(max,(right-left+1));
            }
            right++;
        }

        return max;
    }
}
