A hashMap implements map interface,which is a part of Java collections framework.
Internally hashmap uses array of buckets which stores key-value pairs.
Each bucket is of linked list type NODE.

A basic principle that used by a hashmap to store key value pair is by
generating a unique code to the variables and objects which is called hashcode.

// The hashcode is generated by the hash function which is used to map the key to the bucket.
hashmap has a static nested class called NODE.
    - NODE has three fields:
        - hashcode final
        - key final
        - value
        - next (which is a reference to the next node in the linked list)

--Hashmap also has a field called table which is an array of node.
--This array will not get initialized when the hashmap is created.
        // The table will be initialized when the first key-value pair is added to the hashmap.
--when we create a hashmap the first thing that happens is the hashmap
        is created with an initial capacity of 16 and a load factor of 0.75.

-- When an element is inserted into the hashmap for the first time,
        the table is initialized with an array of size 16. from 0 to 15.
If the key that we are inserting is null, then it is inserted at index 0 because the hashcode of null is 0.
If the key is not null, then the hash of the key is calculated,
 and based on the hash value the bucket is decided.

